---
kind: Namespace
apiVersion: v1

metadata:
    name: weatherns
    labels:
        app: weatherapp
---
kind: Secret
apiVersion: v1
metadata:
    name: weatherapp-secret
    namespace: weatherns
    labels:
        app: weatherapp-secret

data:
    app_id: NzVhYjQxNjQyZTY1ZDEzYmRkZmJlZmM0ZjU0MzI3ZDk=

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: weatherapp-deploy
  name: weatherapp-deploy
  namespace: weatherns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: weatherapp-pod
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/interceptionMode: REDIRECT
        sidecar.istio.io/status: '{"version":"610f2b5742375d30d7f484e296fd022086a4c611b5a6b136bcf0758767fefecc","initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-certs"],"imagePullSecrets":null}'
        traffic.sidecar.istio.io/excludeInboundPorts: "15020"
        traffic.sidecar.istio.io/includeInboundPorts: "3000"
        traffic.sidecar.istio.io/includeOutboundIPRanges: '*'
      creationTimestamp: null
      labels:
        app: weatherapp-pod
        version: v1
      name: weatherapp-pod
    spec:
      containers:
      - env:
        - name: APP_ID
          valueFrom:
            secretKeyRef:
              key: app_id
              name: weatherapp-secret
        image: stackupiss/weather:v1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: weatherapp-port
        name: weatherapp
        ports:
        - containerPort: 3000
          name: weatherapp-port
        readinessProbe:
          httpGet:
            path: /ready
            port: weatherapp-port
        resources:
          limits:
            cpu: 150m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 16Mi
      - args:
        - proxy
        - sidecar
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --configPath
        - /etc/istio/proxy
        - --binaryPath
        - /usr/local/bin/envoy
        - --serviceCluster
        - weatherapp-pod.$(POD_NAMESPACE)
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --discoveryAddress
        - istio-pilot.istio-system:15010
        - --zipkinAddress
        - zipkin.istio-system:9411
        - --dnsRefreshRate
        - 300s
        - --connectTimeout
        - 10s
        - --proxyAdminPort
        - "15000"
        - --concurrency
        - "2"
        - --controlPlaneAuthPolicy
        - NONE
        - --statusPort
        - "15020"
        - --applicationPorts
        - "3000"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_POD_PORTS
          value: |-
            [
                {"name":"weatherapp-port","containerPort":3000}
            ]
        - name: ISTIO_META_CLUSTER_ID
          value: Kubernetes
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SDS_ENABLED
          value: "false"
        - name: ISTIO_META_INTERCEPTION_MODE
          value: REDIRECT
        - name: ISTIO_META_INCLUDE_INBOUND_PORTS
          value: "3000"
        - name: ISTIO_METAJSON_LABELS
          value: |
            {"app":"weatherapp-pod","version":"v1"}
        - name: ISTIO_META_WORKLOAD_NAME
          value: weatherapp-deploy
        - name: ISTIO_META_OWNER
          value: kubernetes://api/apps/v1/namespaces/weatherns/deployments/weatherapp-deploy
        image: docker.io/istio/proxyv2:1.3.0-rc.3
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        ports:
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15020
          initialDelaySeconds: 1
          periodSeconds: 2
        resources:
          limits:
            cpu: "2"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 1337
        volumeMounts:
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/certs/
          name: istio-certs
          readOnly: true
      initContainers:
      - args:
        - -p
        - "15001"
        - -z
        - "15006"
        - -u
        - "1337"
        - -m
        - REDIRECT
        - -i
        - '*'
        - -x
        - ""
        - -b
        - '*'
        - -d
        - "15020"
        image: docker.io/istio/proxy_init:1.3.0-rc.3
        imagePullPolicy: IfNotPresent
        name: istio-init
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsNonRoot: false
          runAsUser: 0
      volumes:
      - emptyDir:
          medium: Memory
        name: istio-envoy
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default
status: {}
---
kind: Service
apiVersion: v1

metadata:
    name: weatherapp-svc
    namespace: weatherns
    labels:
        app: weatherapp-svc

spec:
    type: ClusterIP
    selector:
        app: weatherapp-pod
    ports:
    - name: weatherapp-svc-port
      port: 3000
      targetPort: weatherapp-port

---
kind: Ingress
apiVersion: networking.k8s.io/v1beta1

metadata:
  name: weatherapp-ing
  namespace: weatherns
  labels:
    name: weatherapp-ing
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"

spec:
  rules:
  - http: 
      paths: 
      - path: /
        backend:
          serviceName: weatherapp-svc
          servicePort: 3000
---
